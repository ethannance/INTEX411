@model ProductDetailsViewModel

@{
    ViewData["Title"] = "Item Details";
}

<vc:nav-bar-types user="Visitor"></vc:nav-bar-types>
<vc:submenu-types view="Default"></vc:submenu-types>

<style>
    .product-detail {
        display: flex;
        align-items: flex-start; /* Align items to the top */
        margin: 20px;
    }

    .product-image {
        margin-right: 20px; /* Add some space between image and product info */
    }

    .product-info {
        display: flex;
        flex-direction: column;
        align-items: flex-start; /* Align items to the start (left) */
    }

    .price {
        align-self: flex-start; /* Align price to the start (left) */
        margin-bottom: 10px; /* Add some space below the price */
    }

    .add-to-cart-form button {
        align-self: flex-start; /* Align button to the start (left) */
    }

    .back-link a {
        color: #007bff;
        text-decoration: none;
        font-size: 16px;
    }

    .back-button {
        display: inline-block;
        padding: 8px 12px;
        background-color: #007bff; /* Bootstrap primary color */
        color: #ffffff !important; /* Force white text */
        text-decoration: none;
        border-radius: 5px;
        font-size: 16px;
        transition: background-color 0.2s;
    }

        .back-button:hover {
            background-color: #0056b3; /* A darker shade for hover */
            color: #ffffff !important; /* Keep text white on hover */
        }

    .product-title {
        text-align: center;
    }

    .recommendations {
        display: flex;
        flex-wrap: wrap;
    }

        .recommendations .col-lg-2, .recommendations .col-md-3, .recommendations .col-sm-4, .recommendations .col-6 {
            display: flex;
            flex: 1 0 auto;
        }

    .card {
        width: 100%; /* Makes sure the card takes up the space of its flex container */
        display: flex;
        flex-direction: column; /* Aligns content from top to bottom */
    }

    .card-body {
        flex-grow: 1; /* Allows the card body to expand and push down the footer/content below */
    }

    .green-price {
        color: #28a745; /* Green color */
        font-weight: bold;
    }

</style>

<br />

<div class="back-link">
    <a href="@ViewBag.RefererUrl" class="back-button">← Back</a>
</div>

<h2 class="product-title">@Model.Product.name</h2>

<div class="product-detail">
    <div class="product-image">
        <img src="@Model.Product.img_link" alt="Image" style="height: 400px; width: 400px;">
    </div>

    <div class="product-info">
        <div class="price">
            <h5>Price: <span class="green-price">$@Model.Product.price.00</span></h5>
        </div>

        <form method="post" asp-page="/Cart" class="add-to-cart-form">
            <input type="hidden" name="productId" value="@Model.Product.product_ID" />
            <input type="hidden" name="returnUrl" value="@ViewContext.HttpContext.Request.Path" />
            <button type="submit" class="btn btn-primary">Add to Cart</button>
        </form>
        <br />

        <div class="item-description">
            <h5>Item description:</h5>
            <p>@Model.Product.description</p>
        </div>

        <div class="additional-info">
            <table class="table">
                <thead>
                    <tr>
                        <th colspan="2" class="text-center">Additional Product Information</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <th scope="row">Number of Parts</th>
                        <td>@Model.Product.num_parts</td>
                    </tr>
                    <tr>
                        <th scope="row">Year Released</th>
                        <td>@Model.Product.year</td>
                    </tr>
                    <tr>
                        <th scope="row">Colors Included</th>
                        <td>@Model.Product.primary_color/@Model.Product.secondary_color</td>
                    </tr>
                    <tr>
                        <th scope="row">Category</th>
                        <td>@Model.Product.category</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Recommendations code -->
<br />
<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-lg-10 col-md-12">
            <h3 class="text-center mb-4">Recommended for you:</h3>
            <div class="row recommendations">
                @foreach (var recommendedProduct in Model.RecommendedProducts)
                {
                    <div class="col-lg-2 col-md-3 col-sm-4 col-6 mb-4">
                        <a href="@Url.Action("ProductDetails", "Home", new { id = recommendedProduct.product_ID })" class="text-decoration-none">
                            <div class="card">
                                <img src="@recommendedProduct.img_link" class="card-img-top" alt="@recommendedProduct.name">
                                <div class="card-body">
                                    <h6 class="card-title">@recommendedProduct.name</h6>
                                    <p class="card-text">Price: $@recommendedProduct.price.00</p>
                                    <!-- Add other product details as needed -->
                                </div>
                            </div>
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>




